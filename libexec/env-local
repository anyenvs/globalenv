#!/usr/bin/env bash
#
# Summary: Set or show the local application-specific env version
#
# Usage: env local <version>
#        env local --unset
#
# Sets the local application-specific env version by writing the
# version name to a file named `.env-version'.
#
# When you run a env command, env will look for a `.env-version'
# file in the current directory and each parent directory. If no such
# file is found in the tree, env will use the global env version
# specified with `env global'. A version specified with the
# `GLOBALENV_VERSION' environment variable takes precedence over local
# and global versions.
#
# <version> should be a string matching a env version known to env.
# The special version string `system' will use your default system env.
# Run `env versions' for a list of available env versions.

set -e
[ -n "$ENV_DEBUG" ] && set -x
source ${GLOBALENV_ROOT}/libexec/helpers.sh

# Provide env completions
if [ "$1" = "--complete" ]; then
  echo --unset
  echo system
  binary=$binary exec env-versions --bare
fi

GLOBALENV_VERSION="$1"

if [ "$GLOBALENV_VERSION" = "--unset" ]; then
  rm -f .${binary}-version
elif [ -n "$GLOBALENV_VERSION" ]; then
  binary=$binary env-version-file-write .${binary}-version "$GLOBALENV_VERSION"
else
  if version_file="$(binary=$binary env-version-file "$PWD")"; then
    binary=$binary env-version-file-read "$version_file"
  else
    echo "$binary: no local version configured for this directory" >&2
    exit 1
  fi
fi
