#!/usr/bin/env bash
# Usage: globalenv install <version>
# Summary: Install the specified version of

[ -n "${ENV_DEBUG}" ] && set -x
source ${GLOBALENV_ROOT}/libexec/helpers.sh

[ "${#}" -gt 1 ] && error_and_die "usage: ${binary} install [<version>]"

declare version
version=${1//*-/}

if [ -z "${version}" ]; then
  version_file="$(binary=${binary} env-version-file)"
  if [ "${version_file}" != "${GLOBALENV_ROOT}/version" ]; then
    version="$(cat ${version_file} || true)"
  fi
else
  version="${version}"
fi

test -f "${GLOBALENV_ROOT}/globalrepos.env" && . ${GLOBALENV_ROOT}/globalrepos.env || (error_and_die "Missing ${GLOBALENV_ROOT}/globalrepos.env"; exit 1)
GLOBALENV_REPO="https://api.github.com/repos/${GLOBALENV_REPOS[${binary}]}/releases"
GLOBALENV_BIN=${GLOBALENV_REPOS[${binary}_bin]:-${binary//env/}}
# GLOBALENV_BIN=${GLOBALENV_REPOS[${binary}_bin]}

## globalenv install --list
test "$1" == "--list" -o "$1" == "-l" && {
  eval which {wget,curl,jq} &>/dev/null || { error_and_die "Please install wget curl jq" ; exit 0; }
  next="${GLOBALENV_REPO}?simple=yes&per_page=100&page="
  page=0
  while true; do
    page=$((page + 1))
    versions=$(wget -qO- "${next}${page}" | jq -r '.[].tag_name')
    test -n "$versions" || echo "$next$page - Emply Response"
    test -n "$versions" && { echo $next$page; echo $versions; } || break
  done
  exit 0
}

dst_root="${GLOBALENV_ROOT}/versions"
dst_path="${GLOBALENV_ROOT}/versions/${GLOBALENV_BIN}-${version##v}"
if [ -f "${dst_path}/bin/${GLOBALENV_BIN}" ]; then
  echo "${GLOBALENV_BIN} ${version##v} is already installed"
  exit 0
fi

info "Installing ${GLOBALENV_BIN} ${version##v}"
mkdir -p "${dst_path}/bin" || error_and_die "Failed to make directory ${dst_path}"

#URL=${GLOBALENV_REPOS[${binary}_download]}
_URLS=( $( wget -qO- "${GLOBALENV_REPO[@]}?simple=yes&per_page=1000" | jq -r '.[].assets[]|select(.browser_download_url | contains("'${version##v}'") and contains("'$(_myOS)'") and ( contains("'$(_myARCH)'") or contains("'$(_myMARCH)'") )).browser_download_url' ) )
test -n "${GLOBALENV_REPOS[${binary}_download]}" -a "${#_URLS[@]}" == "1" && { eval "wget -qO ${dst_path}/bin/${GLOBALENV_BIN} ${_URLS}" >&2 || { rm -rf ${dst_path} ; error_and_die "Install failed" ; } ; }
#test -z "${GLOBALENV_REPOS[${binary}_bin]}" -a ${#_URLS[@]} -gt 1 && { eval "for url in ${_URLS[@]} ;do wget -qO ${dst_path}/bin/\$(echo \${url##*/} | sed \"s/_$(_myOS)_$(_myARCH)//\") \$url ;done" >&2 || { rm -rf ${dst_path} ; error_and_die "Install failed" ; } ; }
test ${#_URLS[@]} -gt 1 && { eval "for url in ${_URLS[@]} ;do wget -qO ${dst_path}/bin/\$(echo \${url##*/} | sed \"s/_$(_myOS)_$(_myARCH)//\") \$url ;done" >&2 || { rm -rf ${dst_path} ; error_and_die "Install failed" ; } ; }
test -n "${GLOBALENV_REPOS[${binary}_script]}" && ( eval "${GLOBALENV_REPOS[${binary}_script]}" >&2 || { rm -rf ${dst_path} ; error_and_die "Install failed"; } )
test -n "${GLOBALENV_REPOS[${binary}_postscript]}" && ( eval "${GLOBALENV_REPOS[${binary}_postscript]}" >&2 || { rm -rf ${dst_path} ; error_and_die "Install failed"; } )
#https://github.com/roboll/helmfile/releases/download/v${version##v}/helmfile_$(uname -s)_$(uname -m | sed 's/x86_64/amd64/g') >&2 || error_and_die "Install failed"
chmod +x "${dst_path}/bin"/${GLOBALENV_BIN}

# Autocompletion
test -f ${dst_path}/tools/${GLOBALENV_BIN}.${SHELL##*/} && cp -fv ${dst_path}/tools/${GLOBALENV_BIN}.${SHELL##*/} ${GLOBALENV_ROOT}/completions/${GLOBALENV_BIN}-completion.${SHELL##*/}
test -n "${GLOBALENV_REPOS[${binary}_completion]}" && wget -qO ${GLOBALENV_ROOT}/completions/${GLOBALENV_BIN}-completion.${SHELL##*/} ${GLOBALENV_REPOS[${binary}_completion]}
test -f ${GLOBALENV_ROOT}/completions/${GLOBALENV_BIN}-completion.${SHELL##*/} && . ${GLOBALENV_ROOT}/completions/*.${SHELL##*/}
test -f ${GLOBALENV_ROOT}/completions/${binary}.${SHELL##*/} && . ${GLOBALENV_ROOT}/completions/${binary}.${SHELL##*/}

info "Installation of ${GLOBALENV_BIN} ${version##v} successful"
