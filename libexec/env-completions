#!/usr/bin/env bash
# Usage: globalenv completions <command> [arg1 arg2...]

set -e
[ -n "$ENV_DEBUG" ] && set -x
source ${GLOBALENV_ROOT}/libexec/helpers.sh

env-complete() {
    ## AutoCompletions
    test -f "${GLOBALENV_ROOT}/completions/${binary}.${SHELL##*/}" && . ${GLOBALENV_ROOT}/completions/${binary}.${SHELL##*/} &>/dev/null
    ENV_COMPLETIONS=( $(echo ${GLOBALENV_ROOT}/completions/${binary}.${SHELL##*/} ${GLOBALENV_ROOT}/completions/${binary//env/*}.${SHELL##*/} | tr ' ' '\n' | sort -u | tr '\n' ' ') )
    test -n "${ENV_COMPLETIONS}" && ( echo . ${ENV_COMPLETIONS[@]} ; . ${ENV_COMPLETIONS[@]} >/dev/null )
}

COMMAND="$1"
if [ -z "$COMMAND" ]; then
  binary=${binary} env-help --usage completions >&2
  type -t env-complete >/dev/null || echo "Function: $_ not defined"
  binary=${binary} env-complete
  exit 1
fi

# Provide env completions
if [ "$COMMAND" = "--complete" ]; then
  binary=${binary} exec env-commands
fi

COMMAND_PATH="$(command -v "env-$COMMAND" || command -v "env-sh-$COMMAND")"

# --help is provided automatically
echo --help

if grep -iE "^([#%]|--|//) provide ${binary} completions" "$COMMAND_PATH" >/dev/null; then
  shift
  binary=${binary} exec "$COMMAND_PATH" --complete "$@"
fi
