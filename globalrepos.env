#!/usr/bin/env bash

BAZEL_REPO='bazelbuild/bazel'
HELM_REPO='helm/helm'
HELMFILE_REPO='helmfile/helmfile'
ISTIO_REPO='istio/istio'
OPSDK_REPO='operator-framework/operator-sdk'
TERRAGRUNT_REPO='gruntwork-io/terragrunt'
DOCKER_COMPOSE_REPOS='docker/compose'

declare -A GLOBALENV_REPOS
## Bazel
GLOBALENV_REPOS[bazelenv]=$BAZEL_REPO
GLOBALENV_REPOS[bazelenv_bin]=bazel
GLOBALENV_REPOS[bazelenv_download]="https://github.com/bazelbuild/bazel/releases/download/\${version}/bazel-\${version}-installer-$(uname -s)-$(uname -m).sh"
GLOBALENV_REPOS[bazelenv_script]="bash \${dst_path}/bin/bazel-\${version}-installer*.sh --prefix=\${dst_path}"
GLOBALENV_REPOS[bazelenv_postscript]="ln -svnf \${dst_path} $HOME/.bazel && rm -rf \${dst_path}/bin/bazel-\${version}*"
## docker-compose
GLOBALENV_REPOS[dcenv]=$DOCKER_COMPOSE_REPOS
GLOBALENV_REPOS[dcenv_bin]=docker-compose
GLOBALENV_REPOS[dcenv_download]="https://github.com/docker/compose/releases/download/\${version}/docker-compose-$(_myOS)-$(_myARCH)"
#GLOBALENV_REPOS[dcenv_script]="bash \${dst_path}/bin/bazel-\${version}-installer*.sh --prefix=\${dst_path}"
GLOBALENV_REPOS[dcenv_postscript]="cd \${dst_path}/bin ; rm -fv *.sha256 ; chmod +x ./* ; mv docker-compose* docker-compose"
## Helm
GLOBALENV_REPOS[helmenv]=$HELM_REPO
GLOBALENV_REPOS[helmenv_bin]=helm
GLOBALENV_REPOS[helmenv_script]="wget -qO- https://raw.githubusercontent.com/helm/helm/master/scripts/get | HELM_INSTALL_DIR=\${dst_path}/bin bash -s - --version v\${version##v} --no-sudo"
#GLOBALENV_REPOS[helmenv_download]="https://github.com/helm/helm/releases/download/v\${version##v}/helm-v\${version##v}-$(uname -s)-$(uname -m | sed 's/x86_64/amd64/g')"
#GLOBALENV_REPOS[helmenv_completion]="https://raw.githubusercontent.com/roboll/helmfile/master/autocomplete/helmfile_${SHELL##*/}_autocomplete"
## Helmfile
GLOBALENV_REPOS[helmfilenv]=$HELMFILE_REPO
GLOBALENV_REPOS[helmfilenv_bin]=helmfile
GLOBALENV_REPOS[helmfilenv_script]="cd \${dst_path}/bin; wget -qO- \$_URLS | tar zxf -"
#GLOBALENV_REPOS[helmfilenv_download]="https://github.com/roboll/helmfile/releases/download/v\${version##v}/helmfile_$(uname -s)_$(uname -m | sed 's/x86_64/amd64/g')"
#GLOBALENV_REPOS[helmfilenv_completion]="https://raw.githubusercontent.com/roboll/helmfile/master/autocomplete/helmfile_${SHELL##*/}_autocomplete"
## Istio
GLOBALENV_REPOS[istioenv]=$ISTIO_REPO
GLOBALENV_REPOS[istioenv_script]="cd \${dst_root} ; wget -qO- https://istio.io/downloadIstio | sed \"s%NAME=.*%NAME=istioenv-\${version##v}%g;s%tar -xzf%set -x; tar -C \${dst_path} --strip-components=1 -xzf%g;\" | ISTIO_VERSION=\${version##v} TARGET_ARCH=$(uname -m) sh -"
#GLOBALENV_REPOS[istioenv_postscript]="cd \${dst_root} ; test -d istio-\${version##v} && ( cp -rf istio-\${version##v}/ \${dst_path} ; ln -svnf \${dst_path} $HOME/.istio)"
GLOBALENV_REPOS[istioenv_postscript]="cd \${dst_root} ; test -d istioenv-\${version##v} && ( ln -svnf \${dst_path} $HOME/.istio)"
## Operator SDK
GLOBALENV_REPOS[opsdkenv]=$OPSDK_REPO
GLOBALENV_REPOS[opsdkenv_download]="https://github.com/operator-framework/operator-sdk/releases/download/v\${version##v}/operator-sdk_$(_myOS)_$(_myARCH)"
#"https://github.com/operator-framework/operator-sdk/releases/download/v${version##v}/ansible-operator_$(_myOS)_$(_myARCH)"
#"https://github.com/operator-framework/operator-sdk/releases/download/v${version##v}/helm-operator_$(_myOS)_$(_myARCH)"
GLOBALENV_REPOS[opsdkenv_postscript]="chmod +x \${dst_path}/bin/* ;grep -q operator-sdk $HOME/.bash_completion || echo -e '. <(operator-sdk completion ${SHELL##*/}) || true\n. <(ansible-operator completion ${SHELL##*/}) || true\n. <(helm-operator completion ${SHELL##*/}) || true' >> $HOME/.bash_completion ; . <(\${dst_path}/bin/operator-sdk completion ${SHELL##*/}) || true ;. <(\${dst_path}/bin/ansible-operator completion ${SHELL##*/}) || true ;. <(\${dst_path}/bin/helm-operator completion ${SHELL##*/}) || true"
## Terragrunt
GLOBALENV_REPOS[tgenv]=$TERRAGRUNT_REPO
GLOBALENV_REPOS[tgenv_bin]=terragrunt

#for i in ${!GLOBALENV_REPOS[@]} ;do echo "${i}=${GLOBALENV_REPOS[$i]}"; done
for i in ${!GLOBALENV_REPOS[@]} ;do test -z ${i##*$binary*} && echo "${i}=${GLOBALENV_REPOS[$i]}" || true ;done
